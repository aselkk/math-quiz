{"version":3,"file":"game.js","mappings":";;UAAA;UACA;;;;;WCDA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;ACNO;;AAEP;AACA;;AAEA;AACA,yEAAyE,4BAA4B;AACrG;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB;AACjB;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,8CAA8C,YAAY;AAC1D;AACA;AACA;AACA;;AAEA;;AAEA,C","sources":["webpack://math-quiz/webpack/bootstrap","webpack://math-quiz/webpack/runtime/define property getters","webpack://math-quiz/webpack/runtime/hasOwnProperty shorthand","webpack://math-quiz/webpack/runtime/make namespace object","webpack://math-quiz/./src/js/game.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export const game = () => {\n\n    const username = localStorage.getItem('username');\n    document.getElementById(\"username\").value = username.replace(/\\\"/g, \"\");\n\n    const setName = () => {\n        document.querySelector('.user-greet').textContent = `Have fun, ${username.replace(/\\\"/g, \"\")}`;\n        console.log('123');\n    }\n    setName()\n\n    const firstNum = document.querySelector('.num-1')\n    const secondNum = document.querySelector('.num-2')\n    const operator = document.querySelector('.operator')\n    const answer = document.querySelector('.answer')\n    const form = document.querySelector('.gameplay-form')\n    const score = document.querySelector('.score')\n    const count = document.querySelector('.count')\n\n    function getRandom(min, max) {\n        min = Math.ceil(min)\n        max = Math.floor(max)\n        return Math.floor(Math.random() * (max - min + 1)) + min\n    }\n\n    const operators = ['+', '-', '*', '/']\n\n    const calculate = (a, b, operator) => {\n    switch (operator) {\n        case '+':\n        return a + b\n        case '-':\n        return a - b\n        case '/':\n        return a / b\n        default:\n        return a * b\n    }\n    }\n\n    const generateExample = () => {\n        const firstNum = getRandom(1, 10)\n        const secondNum = getRandom(1, 10)\n        const operator = operators[getRandom(0, 3)]\n\n        if (operator === '/') {\n            if (firstNum % secondNum !== 0) {\n            return generateExample()\n            }\n        }\n\n        const answer = calculate(firstNum, secondNum, operator)\n        return { firstNum, secondNum, operator, answer }\n    }\n\n    const renderExample = (data) => {\n        firstNum.textContent = data.firstNum\n        secondNum.textContent = data.secondNum\n        operator.textContent = data.operator\n    }\n\n    let activeCount = 0\n    let example = generateExample()\n    renderExample(example)\n\n    const onSubmit = (e) => {\n        e.preventDefault()\n\n        if (!answer.value) return\n        if (Number(answer.value) === Number(example.answer)) {\n            activeCount += 1\n            count.textContent = '+1'\n        } else {\n            activeCount -= 1\n            count.textContent = '-1'\n        }\n        score.textContent = `Your score is: ${activeCount}`\n        answer.value = ''\n        example = generateExample()\n        renderExample(example)\n    }\n\nform.addEventListener('submit', onSubmit)\n\n}"],"names":[],"sourceRoot":""}